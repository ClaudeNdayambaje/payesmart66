import { db } from '../firebase';
import { collection, getDocs, query, doc, getDoc, addDoc, updateDoc, deleteDoc, serverTimestamp } from 'firebase/firestore';
import { Category } from '../types';

// Collections Firestore pour les accessoires marketing et les cat√©gories
const ACCESSORIES_COLLECTION = 'accessoires';
const MARKETING_CATEGORIES_COLLECTION = 'marketing_categories'; // Nouvelle collection pour les cat√©gories marketing
const PAYSMART_BUSINESS_ID = 'Hrk3nn1HVlcHOJ7InqK1';

/**
 * R√©cup√®re les cat√©gories uniques depuis les accessoires marketing existants
 */
export const getMarketingCategories = async (): Promise<Category[]> => {
  try {
    console.log(`üîé R√©cup√©ration des cat√©gories depuis les accessoires marketing`);
    
    // R√©cup√©rer tous les accessoires marketing
    const accessoriesCollection = collection(db, ACCESSORIES_COLLECTION);
    const q = query(accessoriesCollection);
    const accessoriesSnapshot = await getDocs(q);
    
    console.log(`üìä Nombre d'accessoires trouv√©s: ${accessoriesSnapshot.size}`);
    
    // Extraire les cat√©gories uniques
    const categoriesMap: Map<string, Category> = new Map();
    
    accessoriesSnapshot.forEach((doc) => {
      const data = doc.data();
      
      // V√©rifier si la cat√©gorie existe et n'est pas vide
      if (data.category && typeof data.category === 'string' && data.category.trim() !== '') {
        const categoryId = data.category.toLowerCase().trim();
        const categoryName = data.category.trim();
        
        if (!categoriesMap.has(categoryId)) {
          categoriesMap.set(categoryId, {
            id: categoryId,
            name: categoryName,
            businessId: PAYSMART_BUSINESS_ID
            // La propri√©t√© createdAt a √©t√© supprim√©e car elle n'existe pas dans l'interface Category
          });
        }
      }
    });
    
    // Convertir la Map en tableau
    const categories: Category[] = Array.from(categoriesMap.values());
    
    console.log(`üìã ${categories.length} cat√©gories uniques trouv√©es`);
    
    // Trier les cat√©gories par nom
    return categories.sort((a, b) => a.name.localeCompare(b.name));
  } catch (error) {
    console.error('‚ùå Erreur lors de la r√©cup√©ration des cat√©gories marketing:', error);
    return [];
  }
};

/**
 * Ajoute une nouvelle cat√©gorie marketing
 */
export const addCategory = async (categoryName: string): Promise<Category | null> => {
  try {
    console.log(`üìù Ajout d'une nouvelle cat√©gorie marketing: ${categoryName}`);
    
    // V√©rifier que le nom n'est pas vide
    if (!categoryName || typeof categoryName !== 'string' || categoryName.trim() === '') {
      console.error('‚ùå Le nom de la cat√©gorie ne peut pas √™tre vide');
      return null;
    }
    
    // Cr√©er la nouvelle cat√©gorie
    const newCategory = {
      name: categoryName.trim(),
      businessId: PAYSMART_BUSINESS_ID,
      createdAt: serverTimestamp()
    };
    
    // Ajouter √† la collection des cat√©gories marketing
    const categoriesCollection = collection(db, MARKETING_CATEGORIES_COLLECTION);
    const docRef = await addDoc(categoriesCollection, newCategory);
    
    // Retourner la cat√©gorie avec son ID
    return {
      id: docRef.id,
      name: newCategory.name,
      businessId: newCategory.businessId
    };
  } catch (error) {
    console.error('‚ùå Erreur lors de l\'ajout de la cat√©gorie marketing:', error);
    return null;
  }
};

/**
 * Supprime une cat√©gorie marketing par son ID
 */
export const deleteCategory = async (categoryId: string): Promise<boolean> => {
  try {
    if (!categoryId) {
      console.error('‚ùå L\'ID de cat√©gorie ne peut pas √™tre vide');
      return false;
    }
    
    console.log(`üö´ Suppression de la cat√©gorie marketing: ${categoryId}`);
    
    // R√©cup√©rer la r√©f√©rence du document et le supprimer
    const categoryRef = doc(db, MARKETING_CATEGORIES_COLLECTION, categoryId);
    await deleteDoc(categoryRef);
    
    return true;
  } catch (error) {
    console.error(`‚ùå Erreur lors de la suppression de la cat√©gorie marketing ${categoryId}:`, error);
    return false;
  }
};
